plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}
def getLocalHost = { ->
    def defaultDevHost = InetAddress.getLocalHost()
            .getCanonicalHostName()
    return NetworkInterface.getNetworkInterfaces()
            .findResult(defaultDevHost) {
                def ifOk = it.isUp() &&
                        !it.isVirtual() &&
                        !it.isPointToPoint() &&
                        !it.isLoopback() &&
                        !it.getName().startsWith("br-") //

                if (ifOk)
                    return it.getInetAddresses().find {
                        it instanceof Inet4Address &&
                                !it.isLoopbackAddress()
                    }
                else
                    return null
            }
}
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.emintolgahanpolat.retrofitex"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'API_ADDRESS', "\"http:/${getLocalHost()}:8080/\""
            manifestPlaceholders = [
                    app_name           : "@string/app_name",
                    ic_launcher        : "@mipmap/ic_launcher",
                    ic_launcher_rounded: "@mipmap/ic_launcher_round"]
        }
        debug {
            applicationIdSuffix ".debug"
            buildConfigField 'String', 'API_ADDRESS', "\"http:/${getLocalHost()}:8080/\""
            manifestPlaceholders = [
                    app_name           : "@string/app_name_debug",
                    ic_launcher        : "@mipmap/ic_launcher",
                    ic_launcher_rounded: "@mipmap/ic_launcher_round"
            ]
        }
        dev {
            initWith debug
            applicationIdSuffix ".dev"
            buildConfigField 'String', 'API_ADDRESS', "\"http:/${getLocalHost()}:8080/\""
            manifestPlaceholders = [
                    app_name           : "@string/app_name_dev",
                    ic_launcher        : "@mipmap/ic_launcher_dev",
                    ic_launcher_rounded: "@mipmap/ic_launcher_dev_round"]
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation "com.squareup.okhttp3:logging-interceptor:3.9.1"
}